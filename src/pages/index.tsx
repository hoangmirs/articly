import Head from 'next/head';
import Image from 'next/image';

import IssueList from 'components/Issue/IssueList';
import {
  GetIssuesQuery,
  graphQLClient,
  IssuesConnection,
} from 'services/issue';
import styles from 'styles/Home.module.css';

interface IndexProps {
  issues: IssuesConnection;
}

const Home = ({ issues }: IndexProps) => {
  console.log(issues);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>TIL</h1>

        <IssueList issues={issues.nodes} />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getStaticProps = async () => {
  const {
    repository: { issues },
  } = await graphQLClient.request(GetIssuesQuery, {
    owner: process.env.REPO_OWNER,
    name: process.env.REPO_NAME,
    labels: ['question', 'documentation'],
    perPage: 10,
  });

  return {
    props: {
      issues: issues as IssuesConnection,
    },
  };
};

export default Home;
